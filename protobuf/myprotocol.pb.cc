// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: myprotocol.proto

#include "myprotocol.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Message {

inline constexpr bulletinfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : locationx_{0},
        locationy_{0},
        rotate_{0},
        bullet_style_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR bulletinfo::bulletinfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct bulletinfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR bulletinfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~bulletinfoDefaultTypeInternal() {}
  union {
    bulletinfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 bulletinfoDefaultTypeInternal _bulletinfo_default_instance_;

inline constexpr UDP_INFO_RES::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ok_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UDP_INFO_RES::UDP_INFO_RES(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UDP_INFO_RESDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UDP_INFO_RESDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UDP_INFO_RESDefaultTypeInternal() {}
  union {
    UDP_INFO_RES _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UDP_INFO_RESDefaultTypeInternal _UDP_INFO_RES_default_instance_;

inline constexpr UDP_INFO_REQ::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UDP_INFO_REQ::UDP_INFO_REQ(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UDP_INFO_REQDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UDP_INFO_REQDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UDP_INFO_REQDefaultTypeInternal() {}
  union {
    UDP_INFO_REQ _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UDP_INFO_REQDefaultTypeInternal _UDP_INFO_REQ_default_instance_;

inline constexpr Set_User_id::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Set_User_id::Set_User_id(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Set_User_idDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Set_User_idDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Set_User_idDefaultTypeInternal() {}
  union {
    Set_User_id _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Set_User_idDefaultTypeInternal _Set_User_id_default_instance_;

inline constexpr Room_info_Response_User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room_info_Response_User::Room_info_Response_User(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Room_info_Response_UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_info_Response_UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_info_Response_UserDefaultTypeInternal() {}
  union {
    Room_info_Response_User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_info_Response_UserDefaultTypeInternal _Room_info_Response_User_default_instance_;

inline constexpr Room_Start_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room_Start_Response::Room_Start_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Room_Start_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_Start_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_Start_ResponseDefaultTypeInternal() {}
  union {
    Room_Start_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_Start_ResponseDefaultTypeInternal _Room_Start_Response_default_instance_;

inline constexpr Room_Set_tankid_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room_Set_tankid_Response::Room_Set_tankid_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Room_Set_tankid_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_Set_tankid_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_Set_tankid_ResponseDefaultTypeInternal() {}
  union {
    Room_Set_tankid_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_Set_tankid_ResponseDefaultTypeInternal _Room_Set_tankid_Response_default_instance_;

inline constexpr Room_Set_tankid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room_Set_tankid::Room_Set_tankid(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Room_Set_tankidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_Set_tankidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_Set_tankidDefaultTypeInternal() {}
  union {
    Room_Set_tankid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_Set_tankidDefaultTypeInternal _Room_Set_tankid_default_instance_;

inline constexpr Room_Message_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room_Message_Response::Room_Message_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Room_Message_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_Message_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_Message_ResponseDefaultTypeInternal() {}
  union {
    Room_Message_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_Message_ResponseDefaultTypeInternal _Room_Message_Response_default_instance_;

inline constexpr Room_Message_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room_Message_Request::Room_Message_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Room_Message_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_Message_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_Message_RequestDefaultTypeInternal() {}
  union {
    Room_Message_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_Message_RequestDefaultTypeInternal _Room_Message_Request_default_instance_;

inline constexpr Ping_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ping_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Ping_info::Ping_info(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Ping_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ping_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ping_infoDefaultTypeInternal() {}
  union {
    Ping_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ping_infoDefaultTypeInternal _Ping_info_default_instance_;

inline constexpr Hall_info_Response_User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hall_info_Response_User::Hall_info_Response_User(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hall_info_Response_UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hall_info_Response_UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hall_info_Response_UserDefaultTypeInternal() {}
  union {
    Hall_info_Response_User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hall_info_Response_UserDefaultTypeInternal _Hall_info_Response_User_default_instance_;

inline constexpr Hall_info_Response_Roominfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : host_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hall_info_Response_Roominfo::Hall_info_Response_Roominfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hall_info_Response_RoominfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hall_info_Response_RoominfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hall_info_Response_RoominfoDefaultTypeInternal() {}
  union {
    Hall_info_Response_Roominfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hall_info_Response_RoominfoDefaultTypeInternal _Hall_info_Response_Roominfo_default_instance_;

inline constexpr Hall_Message_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hall_Message_Response::Hall_Message_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hall_Message_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hall_Message_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hall_Message_ResponseDefaultTypeInternal() {}
  union {
    Hall_Message_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hall_Message_ResponseDefaultTypeInternal _Hall_Message_Response_default_instance_;

inline constexpr Hall_Message_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hall_Message_Request::Hall_Message_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hall_Message_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hall_Message_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hall_Message_RequestDefaultTypeInternal() {}
  union {
    Hall_Message_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hall_Message_RequestDefaultTypeInternal _Hall_Message_Request_default_instance_;

inline constexpr Hall_EnterRoom_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : room_id_{0},
        result_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hall_EnterRoom_Response::Hall_EnterRoom_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hall_EnterRoom_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hall_EnterRoom_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hall_EnterRoom_ResponseDefaultTypeInternal() {}
  union {
    Hall_EnterRoom_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hall_EnterRoom_ResponseDefaultTypeInternal _Hall_EnterRoom_Response_default_instance_;

inline constexpr Hall_EnterRoom_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : room_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hall_EnterRoom_Request::Hall_EnterRoom_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hall_EnterRoom_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hall_EnterRoom_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hall_EnterRoom_RequestDefaultTypeInternal() {}
  union {
    Hall_EnterRoom_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hall_EnterRoom_RequestDefaultTypeInternal _Hall_EnterRoom_Request_default_instance_;

inline constexpr Game_tankinfo_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : locationx_{0},
        locationy_{0},
        rotate_{0},
        tank_style_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_tankinfo_Request::Game_tankinfo_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_tankinfo_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_tankinfo_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_tankinfo_RequestDefaultTypeInternal() {}
  union {
    Game_tankinfo_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_tankinfo_RequestDefaultTypeInternal _Game_tankinfo_Request_default_instance_;

inline constexpr Game_tank_hited_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hited_tank_id_{0},
        health_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_tank_hited_Response::Game_tank_hited_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_tank_hited_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_tank_hited_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_tank_hited_ResponseDefaultTypeInternal() {}
  union {
    Game_tank_hited_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_tank_hited_ResponseDefaultTypeInternal _Game_tank_hited_Response_default_instance_;

inline constexpr Game_prop_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : prop_id_{0},
        tank_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_prop_Response::Game_prop_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_prop_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_prop_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_prop_ResponseDefaultTypeInternal() {}
  union {
    Game_prop_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_prop_ResponseDefaultTypeInternal _Game_prop_Response_default_instance_;

inline constexpr Game_getProp_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : prop_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_getProp_Request::Game_getProp_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_getProp_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_getProp_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_getProp_RequestDefaultTypeInternal() {}
  union {
    Game_getProp_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_getProp_RequestDefaultTypeInternal _Game_getProp_Request_default_instance_;

inline constexpr Game_destroyed_tank_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : destroyed_tank_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_destroyed_tank_Response::Game_destroyed_tank_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_destroyed_tank_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_destroyed_tank_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_destroyed_tank_ResponseDefaultTypeInternal() {}
  union {
    Game_destroyed_tank_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_destroyed_tank_ResponseDefaultTypeInternal _Game_destroyed_tank_Response_default_instance_;

inline constexpr Game_brick_hited_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hited_brick_id_{0},
        health_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_brick_hited_Response::Game_brick_hited_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_brick_hited_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_brick_hited_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_brick_hited_ResponseDefaultTypeInternal() {}
  union {
    Game_brick_hited_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_brick_hited_ResponseDefaultTypeInternal _Game_brick_hited_Response_default_instance_;

inline constexpr Room_info_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : userinfo_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Room_info_Response::Room_info_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Room_info_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_info_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_info_ResponseDefaultTypeInternal() {}
  union {
    Room_info_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_info_ResponseDefaultTypeInternal _Room_info_Response_default_instance_;

inline constexpr Hall_info_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : userinfo_{},
        roominfo_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hall_info_Response::Hall_info_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Hall_info_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Hall_info_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Hall_info_ResponseDefaultTypeInternal() {}
  union {
    Hall_info_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Hall_info_ResponseDefaultTypeInternal _Hall_info_Response_default_instance_;

inline constexpr Game_tankinfo_Response_tankinfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tankinfo_{nullptr},
        id_{0},
        health_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_tankinfo_Response_tankinfo::Game_tankinfo_Response_tankinfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_tankinfo_Response_tankinfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_tankinfo_Response_tankinfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_tankinfo_Response_tankinfoDefaultTypeInternal() {}
  union {
    Game_tankinfo_Response_tankinfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_tankinfo_Response_tankinfoDefaultTypeInternal _Game_tankinfo_Response_tankinfo_default_instance_;

inline constexpr Game_hit_tank_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bulletinfo_{nullptr},
        hited_tank_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_hit_tank_Request::Game_hit_tank_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_hit_tank_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_hit_tank_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_hit_tank_RequestDefaultTypeInternal() {}
  union {
    Game_hit_tank_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_hit_tank_RequestDefaultTypeInternal _Game_hit_tank_Request_default_instance_;

inline constexpr Game_hit_brick_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bulletinfo_{nullptr},
        hited_brick_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_hit_brick_Request::Game_hit_brick_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_hit_brick_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_hit_brick_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_hit_brick_RequestDefaultTypeInternal() {}
  union {
    Game_hit_brick_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_hit_brick_RequestDefaultTypeInternal _Game_hit_brick_Request_default_instance_;

inline constexpr Game_bulletinfo_Response_Info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bulletinfo_{},
        tankid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_bulletinfo_Response_Info::Game_bulletinfo_Response_Info(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_bulletinfo_Response_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_bulletinfo_Response_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_bulletinfo_Response_InfoDefaultTypeInternal() {}
  union {
    Game_bulletinfo_Response_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_bulletinfo_Response_InfoDefaultTypeInternal _Game_bulletinfo_Response_Info_default_instance_;

inline constexpr Game_bulletinfo_Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bulletinfo_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_bulletinfo_Request::Game_bulletinfo_Request(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_bulletinfo_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_bulletinfo_RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_bulletinfo_RequestDefaultTypeInternal() {}
  union {
    Game_bulletinfo_Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_bulletinfo_RequestDefaultTypeInternal _Game_bulletinfo_Request_default_instance_;

inline constexpr Game_tankinfo_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_tankinfo_Response::Game_tankinfo_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_tankinfo_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_tankinfo_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_tankinfo_ResponseDefaultTypeInternal() {}
  union {
    Game_tankinfo_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_tankinfo_ResponseDefaultTypeInternal _Game_tankinfo_Response_default_instance_;

inline constexpr Game_bulletinfo_Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Game_bulletinfo_Response::Game_bulletinfo_Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Game_bulletinfo_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Game_bulletinfo_ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Game_bulletinfo_ResponseDefaultTypeInternal() {}
  union {
    Game_bulletinfo_Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Game_bulletinfo_ResponseDefaultTypeInternal _Game_bulletinfo_Response_default_instance_;
}  // namespace Message
namespace Message {
// ===================================================================

class Hall_info_Response_User::_Internal {
 public:
};

Hall_info_Response_User::Hall_info_Response_User(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Hall_info_Response.User)
}
inline PROTOBUF_NDEBUG_INLINE Hall_info_Response_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

Hall_info_Response_User::Hall_info_Response_User(
    ::google::protobuf::Arena* arena,
    const Hall_info_Response_User& from)
    : ::google::protobuf::MessageLite(arena) {
  Hall_info_Response_User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Hall_info_Response.User)
}
inline PROTOBUF_NDEBUG_INLINE Hall_info_Response_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void Hall_info_Response_User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Hall_info_Response_User::~Hall_info_Response_User() {
  // @@protoc_insertion_point(destructor:Message.Hall_info_Response.User)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Hall_info_Response_User::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hall_info_Response_User::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[32];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Hall_info_Response.User",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Hall_info_Response_User::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Hall_info_Response.User)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* Hall_info_Response_User::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> Hall_info_Response_User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hall_info_Response_User_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_info_Response_User, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Hall_info_Response_User, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "Message.Hall_info_Response.User"
    "name"
  }},
};

::uint8_t* Hall_info_Response_User::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Hall_info_Response.User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Hall_info_Response.User.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Hall_info_Response.User)
  return target;
}

::size_t Hall_info_Response_User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Hall_info_Response.User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Hall_info_Response_User::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Hall_info_Response_User*>(
      &from));
}

void Hall_info_Response_User::MergeFrom(const Hall_info_Response_User& from) {
  Hall_info_Response_User* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Hall_info_Response.User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Hall_info_Response_User::CopyFrom(const Hall_info_Response_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Hall_info_Response.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hall_info_Response_User::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Hall_info_Response_User::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Hall_info_Response_User::InternalSwap(Hall_info_Response_User* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

// ===================================================================

class Hall_info_Response_Roominfo::_Internal {
 public:
};

Hall_info_Response_Roominfo::Hall_info_Response_Roominfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Hall_info_Response.Roominfo)
}
inline PROTOBUF_NDEBUG_INLINE Hall_info_Response_Roominfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : host_name_(arena, from.host_name_),
        _cached_size_{0} {}

Hall_info_Response_Roominfo::Hall_info_Response_Roominfo(
    ::google::protobuf::Arena* arena,
    const Hall_info_Response_Roominfo& from)
    : ::google::protobuf::MessageLite(arena) {
  Hall_info_Response_Roominfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.room_id_ = from._impl_.room_id_;

  // @@protoc_insertion_point(copy_constructor:Message.Hall_info_Response.Roominfo)
}
inline PROTOBUF_NDEBUG_INLINE Hall_info_Response_Roominfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : host_name_(arena),
        _cached_size_{0} {}

inline void Hall_info_Response_Roominfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.room_id_ = {};
}
Hall_info_Response_Roominfo::~Hall_info_Response_Roominfo() {
  // @@protoc_insertion_point(destructor:Message.Hall_info_Response.Roominfo)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Hall_info_Response_Roominfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.host_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hall_info_Response_Roominfo::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[36];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Hall_info_Response.Roominfo",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Hall_info_Response_Roominfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Hall_info_Response.Roominfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.host_name_.ClearToEmpty();
  _impl_.room_id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Hall_info_Response_Roominfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> Hall_info_Response_Roominfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hall_info_Response_Roominfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // string host_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_info_Response_Roominfo, _impl_.host_name_)}},
    // int32 room_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_info_Response_Roominfo, _impl_.room_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 room_id = 1;
    {PROTOBUF_FIELD_OFFSET(Hall_info_Response_Roominfo, _impl_.room_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string host_name = 2;
    {PROTOBUF_FIELD_OFFSET(Hall_info_Response_Roominfo, _impl_.host_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\11\0\0\0\0\0"
    "Message.Hall_info_Response.Roominfo"
    "host_name"
  }},
};

::uint8_t* Hall_info_Response_Roominfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Hall_info_Response.Roominfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_room_id(), target);
  }

  // string host_name = 2;
  if (!this->_internal_host_name().empty()) {
    const std::string& _s = this->_internal_host_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Hall_info_Response.Roominfo.host_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Hall_info_Response.Roominfo)
  return target;
}

::size_t Hall_info_Response_Roominfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Hall_info_Response.Roominfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host_name = 2;
  if (!this->_internal_host_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_host_name());
  }

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_room_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Hall_info_Response_Roominfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Hall_info_Response_Roominfo*>(
      &from));
}

void Hall_info_Response_Roominfo::MergeFrom(const Hall_info_Response_Roominfo& from) {
  Hall_info_Response_Roominfo* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Hall_info_Response.Roominfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_host_name().empty()) {
    _this->_internal_set_host_name(from._internal_host_name());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Hall_info_Response_Roominfo::CopyFrom(const Hall_info_Response_Roominfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Hall_info_Response.Roominfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hall_info_Response_Roominfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Hall_info_Response_Roominfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Hall_info_Response_Roominfo::InternalSwap(Hall_info_Response_Roominfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_name_, &other->_impl_.host_name_, arena);
        swap(_impl_.room_id_, other->_impl_.room_id_);
}

// ===================================================================

class Hall_info_Response::_Internal {
 public:
};

Hall_info_Response::Hall_info_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Hall_info_Response)
}
inline PROTOBUF_NDEBUG_INLINE Hall_info_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : userinfo_{visibility, arena, from.userinfo_},
        roominfo_{visibility, arena, from.roominfo_},
        _cached_size_{0} {}

Hall_info_Response::Hall_info_Response(
    ::google::protobuf::Arena* arena,
    const Hall_info_Response& from)
    : ::google::protobuf::MessageLite(arena) {
  Hall_info_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Hall_info_Response)
}
inline PROTOBUF_NDEBUG_INLINE Hall_info_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : userinfo_{visibility, arena},
        roominfo_{visibility, arena},
        _cached_size_{0} {}

inline void Hall_info_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Hall_info_Response::~Hall_info_Response() {
  // @@protoc_insertion_point(destructor:Message.Hall_info_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Hall_info_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hall_info_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[27];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Hall_info_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Hall_info_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Hall_info_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userinfo_.Clear();
  _impl_.roominfo_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Hall_info_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Hall_info_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Hall_info_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .Message.Hall_info_Response.Roominfo roominfo = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Hall_info_Response, _impl_.roominfo_)}},
    // repeated .Message.Hall_info_Response.User userinfo = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_info_Response, _impl_.userinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Message.Hall_info_Response.User userinfo = 1;
    {PROTOBUF_FIELD_OFFSET(Hall_info_Response, _impl_.userinfo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Message.Hall_info_Response.Roominfo roominfo = 2;
    {PROTOBUF_FIELD_OFFSET(Hall_info_Response, _impl_.roominfo_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::Hall_info_Response_User>()},
    {::_pbi::TcParser::GetTable<::Message::Hall_info_Response_Roominfo>()},
  }}, {{
  }},
};

::uint8_t* Hall_info_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Hall_info_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Message.Hall_info_Response.User userinfo = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_userinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_userinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .Message.Hall_info_Response.Roominfo roominfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_roominfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_roominfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Hall_info_Response)
  return target;
}

::size_t Hall_info_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Hall_info_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Message.Hall_info_Response.User userinfo = 1;
  total_size += 1UL * this->_internal_userinfo_size();
  for (const auto& msg : this->_internal_userinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .Message.Hall_info_Response.Roominfo roominfo = 2;
  total_size += 1UL * this->_internal_roominfo_size();
  for (const auto& msg : this->_internal_roominfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Hall_info_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Hall_info_Response*>(
      &from));
}

void Hall_info_Response::MergeFrom(const Hall_info_Response& from) {
  Hall_info_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Hall_info_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_userinfo()->MergeFrom(
      from._internal_userinfo());
  _this->_internal_mutable_roominfo()->MergeFrom(
      from._internal_roominfo());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Hall_info_Response::CopyFrom(const Hall_info_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Hall_info_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hall_info_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Hall_info_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Hall_info_Response::InternalSwap(Hall_info_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.userinfo_.InternalSwap(&other->_impl_.userinfo_);
  _impl_.roominfo_.InternalSwap(&other->_impl_.roominfo_);
}

// ===================================================================

class Hall_Message_Request::_Internal {
 public:
};

Hall_Message_Request::Hall_Message_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Hall_Message_Request)
}
inline PROTOBUF_NDEBUG_INLINE Hall_Message_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : content_(arena, from.content_),
        _cached_size_{0} {}

Hall_Message_Request::Hall_Message_Request(
    ::google::protobuf::Arena* arena,
    const Hall_Message_Request& from)
    : ::google::protobuf::MessageLite(arena) {
  Hall_Message_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Hall_Message_Request)
}
inline PROTOBUF_NDEBUG_INLINE Hall_Message_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_(arena),
        _cached_size_{0} {}

inline void Hall_Message_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Hall_Message_Request::~Hall_Message_Request() {
  // @@protoc_insertion_point(destructor:Message.Hall_Message_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Hall_Message_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hall_Message_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[29];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Hall_Message_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Hall_Message_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Hall_Message_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* Hall_Message_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> Hall_Message_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hall_Message_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // string content = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_Message_Request, _impl_.content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string content = 1;
    {PROTOBUF_FIELD_OFFSET(Hall_Message_Request, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\7\0\0\0\0\0\0"
    "Message.Hall_Message_Request"
    "content"
  }},
};

::uint8_t* Hall_Message_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Hall_Message_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Hall_Message_Request.content");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Hall_Message_Request)
  return target;
}

::size_t Hall_Message_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Hall_Message_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Hall_Message_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Hall_Message_Request*>(
      &from));
}

void Hall_Message_Request::MergeFrom(const Hall_Message_Request& from) {
  Hall_Message_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Hall_Message_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Hall_Message_Request::CopyFrom(const Hall_Message_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Hall_Message_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hall_Message_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Hall_Message_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Hall_Message_Request::InternalSwap(Hall_Message_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
}

// ===================================================================

class Hall_Message_Response::_Internal {
 public:
};

Hall_Message_Response::Hall_Message_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Hall_Message_Response)
}
inline PROTOBUF_NDEBUG_INLINE Hall_Message_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        content_(arena, from.content_),
        _cached_size_{0} {}

Hall_Message_Response::Hall_Message_Response(
    ::google::protobuf::Arena* arena,
    const Hall_Message_Response& from)
    : ::google::protobuf::MessageLite(arena) {
  Hall_Message_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Hall_Message_Response)
}
inline PROTOBUF_NDEBUG_INLINE Hall_Message_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        content_(arena),
        _cached_size_{0} {}

inline void Hall_Message_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Hall_Message_Response::~Hall_Message_Response() {
  // @@protoc_insertion_point(destructor:Message.Hall_Message_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Hall_Message_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hall_Message_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[30];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Hall_Message_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Hall_Message_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Hall_Message_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* Hall_Message_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> Hall_Message_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hall_Message_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_Message_Response, _impl_.content_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_Message_Response, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Hall_Message_Response, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(Hall_Message_Response, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\4\7\0\0\0\0\0"
    "Message.Hall_Message_Response"
    "name"
    "content"
  }},
};

::uint8_t* Hall_Message_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Hall_Message_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Hall_Message_Response.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Hall_Message_Response.content");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Hall_Message_Response)
  return target;
}

::size_t Hall_Message_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Hall_Message_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Hall_Message_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Hall_Message_Response*>(
      &from));
}

void Hall_Message_Response::MergeFrom(const Hall_Message_Response& from) {
  Hall_Message_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Hall_Message_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Hall_Message_Response::CopyFrom(const Hall_Message_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Hall_Message_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hall_Message_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Hall_Message_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Hall_Message_Response::InternalSwap(Hall_Message_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
}

// ===================================================================

class Hall_EnterRoom_Request::_Internal {
 public:
};

Hall_EnterRoom_Request::Hall_EnterRoom_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Hall_EnterRoom_Request)
}
Hall_EnterRoom_Request::Hall_EnterRoom_Request(
    ::google::protobuf::Arena* arena, const Hall_EnterRoom_Request& from)
    : Hall_EnterRoom_Request(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Hall_EnterRoom_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Hall_EnterRoom_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.room_id_ = {};
}
Hall_EnterRoom_Request::~Hall_EnterRoom_Request() {
  // @@protoc_insertion_point(destructor:Message.Hall_EnterRoom_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Hall_EnterRoom_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hall_EnterRoom_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[31];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Hall_EnterRoom_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Hall_EnterRoom_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Hall_EnterRoom_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.room_id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Hall_EnterRoom_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Hall_EnterRoom_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hall_EnterRoom_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 room_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Request, _impl_.room_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 room_id = 1;
    {PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Request, _impl_.room_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Hall_EnterRoom_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Hall_EnterRoom_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Hall_EnterRoom_Request)
  return target;
}

::size_t Hall_EnterRoom_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Hall_EnterRoom_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_room_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Hall_EnterRoom_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Hall_EnterRoom_Request*>(
      &from));
}

void Hall_EnterRoom_Request::MergeFrom(const Hall_EnterRoom_Request& from) {
  Hall_EnterRoom_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Hall_EnterRoom_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Hall_EnterRoom_Request::CopyFrom(const Hall_EnterRoom_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Hall_EnterRoom_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hall_EnterRoom_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Hall_EnterRoom_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Hall_EnterRoom_Request::InternalSwap(Hall_EnterRoom_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.room_id_, other->_impl_.room_id_);
}

// ===================================================================

class Hall_EnterRoom_Response::_Internal {
 public:
};

Hall_EnterRoom_Response::Hall_EnterRoom_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Hall_EnterRoom_Response)
}
Hall_EnterRoom_Response::Hall_EnterRoom_Response(
    ::google::protobuf::Arena* arena, const Hall_EnterRoom_Response& from)
    : Hall_EnterRoom_Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Hall_EnterRoom_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Hall_EnterRoom_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_id_),
           0,
           offsetof(Impl_, result_) -
               offsetof(Impl_, room_id_) +
               sizeof(Impl_::result_));
}
Hall_EnterRoom_Response::~Hall_EnterRoom_Response() {
  // @@protoc_insertion_point(destructor:Message.Hall_EnterRoom_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Hall_EnterRoom_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Hall_EnterRoom_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[32];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Hall_EnterRoom_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Hall_EnterRoom_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Hall_EnterRoom_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.room_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.result_) -
      reinterpret_cast<char*>(&_impl_.room_id_)) + sizeof(_impl_.result_));
  _internal_metadata_.Clear<std::string>();
}

const char* Hall_EnterRoom_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Hall_EnterRoom_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Hall_EnterRoom_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 result = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Response, _impl_.result_)}},
    // int32 room_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Response, _impl_.room_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 room_id = 1;
    {PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Response, _impl_.room_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 result = 2;
    {PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Response, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Hall_EnterRoom_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Hall_EnterRoom_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_room_id(), target);
  }

  // int32 result = 2;
  if (this->_internal_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Hall_EnterRoom_Response)
  return target;
}

::size_t Hall_EnterRoom_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Hall_EnterRoom_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_room_id());
  }

  // int32 result = 2;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Hall_EnterRoom_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Hall_EnterRoom_Response*>(
      &from));
}

void Hall_EnterRoom_Response::MergeFrom(const Hall_EnterRoom_Response& from) {
  Hall_EnterRoom_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Hall_EnterRoom_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Hall_EnterRoom_Response::CopyFrom(const Hall_EnterRoom_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Hall_EnterRoom_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Hall_EnterRoom_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Hall_EnterRoom_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Hall_EnterRoom_Response::InternalSwap(Hall_EnterRoom_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Response, _impl_.result_)
      + sizeof(Hall_EnterRoom_Response::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(Hall_EnterRoom_Response, _impl_.room_id_)>(
          reinterpret_cast<char*>(&_impl_.room_id_),
          reinterpret_cast<char*>(&other->_impl_.room_id_));
}

// ===================================================================

class Ping_info::_Internal {
 public:
};

Ping_info::Ping_info(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Ping_info)
}
Ping_info::Ping_info(
    ::google::protobuf::Arena* arena, const Ping_info& from)
    : Ping_info(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Ping_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Ping_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ping_id_ = {};
}
Ping_info::~Ping_info() {
  // @@protoc_insertion_point(destructor:Message.Ping_info)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Ping_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Ping_info::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[18];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Ping_info",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Ping_info::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Ping_info)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ping_id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Ping_info::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Ping_info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Ping_info_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 ping_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Ping_info, _impl_.ping_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 ping_id = 1;
    {PROTOBUF_FIELD_OFFSET(Ping_info, _impl_.ping_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Ping_info::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Ping_info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 ping_id = 1;
  if (this->_internal_ping_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_ping_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Ping_info)
  return target;
}

::size_t Ping_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Ping_info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 ping_id = 1;
  if (this->_internal_ping_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ping_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Ping_info::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Ping_info*>(
      &from));
}

void Ping_info::MergeFrom(const Ping_info& from) {
  Ping_info* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Ping_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ping_id() != 0) {
    _this->_internal_set_ping_id(from._internal_ping_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Ping_info::CopyFrom(const Ping_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Ping_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Ping_info::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Ping_info::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Ping_info::InternalSwap(Ping_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.ping_id_, other->_impl_.ping_id_);
}

// ===================================================================

class Set_User_id::_Internal {
 public:
};

Set_User_id::Set_User_id(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Set_User_id)
}
inline PROTOBUF_NDEBUG_INLINE Set_User_id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

Set_User_id::Set_User_id(
    ::google::protobuf::Arena* arena,
    const Set_User_id& from)
    : ::google::protobuf::MessageLite(arena) {
  Set_User_id* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Set_User_id)
}
inline PROTOBUF_NDEBUG_INLINE Set_User_id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void Set_User_id::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Set_User_id::~Set_User_id() {
  // @@protoc_insertion_point(destructor:Message.Set_User_id)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Set_User_id::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Set_User_id::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[20];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Set_User_id",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Set_User_id::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Set_User_id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* Set_User_id::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 32, 2> Set_User_id::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Set_User_id_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Set_User_id, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Set_User_id, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\4\0\0\0\0\0\0"
    "Message.Set_User_id"
    "name"
  }},
};

::uint8_t* Set_User_id::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Set_User_id)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Set_User_id.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Set_User_id)
  return target;
}

::size_t Set_User_id::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Set_User_id)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Set_User_id::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Set_User_id*>(
      &from));
}

void Set_User_id::MergeFrom(const Set_User_id& from) {
  Set_User_id* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Set_User_id)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Set_User_id::CopyFrom(const Set_User_id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Set_User_id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Set_User_id::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Set_User_id::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Set_User_id::InternalSwap(Set_User_id* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

// ===================================================================

class Room_info_Response_User::_Internal {
 public:
};

Room_info_Response_User::Room_info_Response_User(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Room_info_Response.User)
}
inline PROTOBUF_NDEBUG_INLINE Room_info_Response_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

Room_info_Response_User::Room_info_Response_User(
    ::google::protobuf::Arena* arena,
    const Room_info_Response_User& from)
    : ::google::protobuf::MessageLite(arena) {
  Room_info_Response_User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:Message.Room_info_Response.User)
}
inline PROTOBUF_NDEBUG_INLINE Room_info_Response_User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void Room_info_Response_User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
Room_info_Response_User::~Room_info_Response_User() {
  // @@protoc_insertion_point(destructor:Message.Room_info_Response.User)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Room_info_Response_User::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Room_info_Response_User::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[32];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Room_info_Response.User",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Room_info_Response_User::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Room_info_Response.User)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Room_info_Response_User::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> Room_info_Response_User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Room_info_Response_User_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 status = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Room_info_Response_User, _impl_.status_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Room_info_Response_User, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Room_info_Response_User, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 status = 2;
    {PROTOBUF_FIELD_OFFSET(Room_info_Response_User, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "Message.Room_info_Response.User"
    "name"
  }},
};

::uint8_t* Room_info_Response_User::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Room_info_Response.User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Room_info_Response.User.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Room_info_Response.User)
  return target;
}

::size_t Room_info_Response_User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Room_info_Response.User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 status = 2;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Room_info_Response_User::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Room_info_Response_User*>(
      &from));
}

void Room_info_Response_User::MergeFrom(const Room_info_Response_User& from) {
  Room_info_Response_User* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Room_info_Response.User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Room_info_Response_User::CopyFrom(const Room_info_Response_User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Room_info_Response.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Room_info_Response_User::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Room_info_Response_User::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Room_info_Response_User::InternalSwap(Room_info_Response_User* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.status_, other->_impl_.status_);
}

// ===================================================================

class Room_info_Response::_Internal {
 public:
};

Room_info_Response::Room_info_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Room_info_Response)
}
inline PROTOBUF_NDEBUG_INLINE Room_info_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : userinfo_{visibility, arena, from.userinfo_},
        _cached_size_{0} {}

Room_info_Response::Room_info_Response(
    ::google::protobuf::Arena* arena,
    const Room_info_Response& from)
    : ::google::protobuf::MessageLite(arena) {
  Room_info_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Room_info_Response)
}
inline PROTOBUF_NDEBUG_INLINE Room_info_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : userinfo_{visibility, arena},
        _cached_size_{0} {}

inline void Room_info_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Room_info_Response::~Room_info_Response() {
  // @@protoc_insertion_point(destructor:Message.Room_info_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Room_info_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Room_info_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[27];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Room_info_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Room_info_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Room_info_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userinfo_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Room_info_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Room_info_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Room_info_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .Message.Room_info_Response.User userinfo = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Room_info_Response, _impl_.userinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Message.Room_info_Response.User userinfo = 1;
    {PROTOBUF_FIELD_OFFSET(Room_info_Response, _impl_.userinfo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::Room_info_Response_User>()},
  }}, {{
  }},
};

::uint8_t* Room_info_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Room_info_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Message.Room_info_Response.User userinfo = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_userinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_userinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Room_info_Response)
  return target;
}

::size_t Room_info_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Room_info_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Message.Room_info_Response.User userinfo = 1;
  total_size += 1UL * this->_internal_userinfo_size();
  for (const auto& msg : this->_internal_userinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Room_info_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Room_info_Response*>(
      &from));
}

void Room_info_Response::MergeFrom(const Room_info_Response& from) {
  Room_info_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Room_info_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_userinfo()->MergeFrom(
      from._internal_userinfo());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Room_info_Response::CopyFrom(const Room_info_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Room_info_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Room_info_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Room_info_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Room_info_Response::InternalSwap(Room_info_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.userinfo_.InternalSwap(&other->_impl_.userinfo_);
}

// ===================================================================

class Room_Message_Request::_Internal {
 public:
};

Room_Message_Request::Room_Message_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Room_Message_Request)
}
inline PROTOBUF_NDEBUG_INLINE Room_Message_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : content_(arena, from.content_),
        _cached_size_{0} {}

Room_Message_Request::Room_Message_Request(
    ::google::protobuf::Arena* arena,
    const Room_Message_Request& from)
    : ::google::protobuf::MessageLite(arena) {
  Room_Message_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Room_Message_Request)
}
inline PROTOBUF_NDEBUG_INLINE Room_Message_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_(arena),
        _cached_size_{0} {}

inline void Room_Message_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Room_Message_Request::~Room_Message_Request() {
  // @@protoc_insertion_point(destructor:Message.Room_Message_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Room_Message_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Room_Message_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[29];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Room_Message_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Room_Message_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Room_Message_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* Room_Message_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> Room_Message_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Room_Message_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // string content = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Room_Message_Request, _impl_.content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string content = 1;
    {PROTOBUF_FIELD_OFFSET(Room_Message_Request, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\7\0\0\0\0\0\0"
    "Message.Room_Message_Request"
    "content"
  }},
};

::uint8_t* Room_Message_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Room_Message_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Room_Message_Request.content");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Room_Message_Request)
  return target;
}

::size_t Room_Message_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Room_Message_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Room_Message_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Room_Message_Request*>(
      &from));
}

void Room_Message_Request::MergeFrom(const Room_Message_Request& from) {
  Room_Message_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Room_Message_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Room_Message_Request::CopyFrom(const Room_Message_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Room_Message_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Room_Message_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Room_Message_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Room_Message_Request::InternalSwap(Room_Message_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
}

// ===================================================================

class Room_Message_Response::_Internal {
 public:
};

Room_Message_Response::Room_Message_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Room_Message_Response)
}
inline PROTOBUF_NDEBUG_INLINE Room_Message_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        content_(arena, from.content_),
        _cached_size_{0} {}

Room_Message_Response::Room_Message_Response(
    ::google::protobuf::Arena* arena,
    const Room_Message_Response& from)
    : ::google::protobuf::MessageLite(arena) {
  Room_Message_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Room_Message_Response)
}
inline PROTOBUF_NDEBUG_INLINE Room_Message_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        content_(arena),
        _cached_size_{0} {}

inline void Room_Message_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Room_Message_Response::~Room_Message_Response() {
  // @@protoc_insertion_point(destructor:Message.Room_Message_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Room_Message_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Room_Message_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[30];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Room_Message_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Room_Message_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Room_Message_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

const char* Room_Message_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> Room_Message_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Room_Message_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Room_Message_Response, _impl_.content_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Room_Message_Response, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Room_Message_Response, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(Room_Message_Response, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\4\7\0\0\0\0\0"
    "Message.Room_Message_Response"
    "name"
    "content"
  }},
};

::uint8_t* Room_Message_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Room_Message_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Room_Message_Response.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.Room_Message_Response.content");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Room_Message_Response)
  return target;
}

::size_t Room_Message_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Room_Message_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Room_Message_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Room_Message_Response*>(
      &from));
}

void Room_Message_Response::MergeFrom(const Room_Message_Response& from) {
  Room_Message_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Room_Message_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Room_Message_Response::CopyFrom(const Room_Message_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Room_Message_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Room_Message_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Room_Message_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Room_Message_Response::InternalSwap(Room_Message_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
}

// ===================================================================

class Room_Set_tankid::_Internal {
 public:
};

Room_Set_tankid::Room_Set_tankid(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Room_Set_tankid)
}
Room_Set_tankid::Room_Set_tankid(
    ::google::protobuf::Arena* arena, const Room_Set_tankid& from)
    : Room_Set_tankid(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Room_Set_tankid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Room_Set_tankid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Room_Set_tankid::~Room_Set_tankid() {
  // @@protoc_insertion_point(destructor:Message.Room_Set_tankid)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Room_Set_tankid::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Room_Set_tankid::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[24];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Room_Set_tankid",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Room_Set_tankid::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Room_Set_tankid)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Room_Set_tankid::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Room_Set_tankid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Room_Set_tankid_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Room_Set_tankid, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Room_Set_tankid, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Room_Set_tankid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Room_Set_tankid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Room_Set_tankid)
  return target;
}

::size_t Room_Set_tankid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Room_Set_tankid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Room_Set_tankid::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Room_Set_tankid*>(
      &from));
}

void Room_Set_tankid::MergeFrom(const Room_Set_tankid& from) {
  Room_Set_tankid* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Room_Set_tankid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Room_Set_tankid::CopyFrom(const Room_Set_tankid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Room_Set_tankid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Room_Set_tankid::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Room_Set_tankid::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Room_Set_tankid::InternalSwap(Room_Set_tankid* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

// ===================================================================

class Room_Set_tankid_Response::_Internal {
 public:
};

Room_Set_tankid_Response::Room_Set_tankid_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Room_Set_tankid_Response)
}
Room_Set_tankid_Response::Room_Set_tankid_Response(
    ::google::protobuf::Arena* arena, const Room_Set_tankid_Response& from)
    : Room_Set_tankid_Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Room_Set_tankid_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Room_Set_tankid_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Room_Set_tankid_Response::~Room_Set_tankid_Response() {
  // @@protoc_insertion_point(destructor:Message.Room_Set_tankid_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Room_Set_tankid_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Room_Set_tankid_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[33];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Room_Set_tankid_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Room_Set_tankid_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Room_Set_tankid_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Room_Set_tankid_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Room_Set_tankid_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Room_Set_tankid_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Room_Set_tankid_Response, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Room_Set_tankid_Response, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Room_Set_tankid_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Room_Set_tankid_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Room_Set_tankid_Response)
  return target;
}

::size_t Room_Set_tankid_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Room_Set_tankid_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Room_Set_tankid_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Room_Set_tankid_Response*>(
      &from));
}

void Room_Set_tankid_Response::MergeFrom(const Room_Set_tankid_Response& from) {
  Room_Set_tankid_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Room_Set_tankid_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Room_Set_tankid_Response::CopyFrom(const Room_Set_tankid_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Room_Set_tankid_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Room_Set_tankid_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Room_Set_tankid_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Room_Set_tankid_Response::InternalSwap(Room_Set_tankid_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

// ===================================================================

class Room_Start_Response::_Internal {
 public:
};

Room_Start_Response::Room_Start_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Room_Start_Response)
}
Room_Start_Response::Room_Start_Response(
    ::google::protobuf::Arena* arena, const Room_Start_Response& from)
    : Room_Start_Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Room_Start_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Room_Start_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
Room_Start_Response::~Room_Start_Response() {
  // @@protoc_insertion_point(destructor:Message.Room_Start_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Room_Start_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Room_Start_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[28];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Room_Start_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Room_Start_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Room_Start_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Room_Start_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Room_Start_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Room_Start_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 result = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Room_Start_Response, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 result = 1;
    {PROTOBUF_FIELD_OFFSET(Room_Start_Response, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Room_Start_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Room_Start_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Room_Start_Response)
  return target;
}

::size_t Room_Start_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Room_Start_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Room_Start_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Room_Start_Response*>(
      &from));
}

void Room_Start_Response::MergeFrom(const Room_Start_Response& from) {
  Room_Start_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Room_Start_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Room_Start_Response::CopyFrom(const Room_Start_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Room_Start_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Room_Start_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Room_Start_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Room_Start_Response::InternalSwap(Room_Start_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.result_, other->_impl_.result_);
}

// ===================================================================

class Game_tankinfo_Request::_Internal {
 public:
};

Game_tankinfo_Request::Game_tankinfo_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_tankinfo_Request)
}
Game_tankinfo_Request::Game_tankinfo_Request(
    ::google::protobuf::Arena* arena, const Game_tankinfo_Request& from)
    : Game_tankinfo_Request(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Game_tankinfo_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_tankinfo_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, locationx_),
           0,
           offsetof(Impl_, tank_style_) -
               offsetof(Impl_, locationx_) +
               sizeof(Impl_::tank_style_));
}
Game_tankinfo_Request::~Game_tankinfo_Request() {
  // @@protoc_insertion_point(destructor:Message.Game_tankinfo_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_tankinfo_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_tankinfo_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[30];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_tankinfo_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_tankinfo_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_tankinfo_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.locationx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tank_style_) -
      reinterpret_cast<char*>(&_impl_.locationx_)) + sizeof(_impl_.tank_style_));
  _internal_metadata_.Clear<std::string>();
}

const char* Game_tankinfo_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Game_tankinfo_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Game_tankinfo_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 tank_style = 4;
    {::_pbi::TcParser::FastV32S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.tank_style_)}},
    // double locationX = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.locationx_)}},
    // double locationY = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.locationy_)}},
    // double rotate = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.rotate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double locationX = 1;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.locationx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double locationY = 2;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.locationy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double rotate = 3;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.rotate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 tank_style = 4;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.tank_style_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Game_tankinfo_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_tankinfo_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double locationX = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationx = this->_internal_locationx();
  ::uint64_t raw_locationx;
  memcpy(&raw_locationx, &tmp_locationx, sizeof(tmp_locationx));
  if (raw_locationx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_locationx(), target);
  }

  // double locationY = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationy = this->_internal_locationy();
  ::uint64_t raw_locationy;
  memcpy(&raw_locationy, &tmp_locationy, sizeof(tmp_locationy));
  if (raw_locationy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_locationy(), target);
  }

  // double rotate = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_rotate = this->_internal_rotate();
  ::uint64_t raw_rotate;
  memcpy(&raw_rotate, &tmp_rotate, sizeof(tmp_rotate));
  if (raw_rotate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_rotate(), target);
  }

  // int32 tank_style = 4;
  if (this->_internal_tank_style() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_tank_style(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_tankinfo_Request)
  return target;
}

::size_t Game_tankinfo_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_tankinfo_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double locationX = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationx = this->_internal_locationx();
  ::uint64_t raw_locationx;
  memcpy(&raw_locationx, &tmp_locationx, sizeof(tmp_locationx));
  if (raw_locationx != 0) {
    total_size += 9;
  }

  // double locationY = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationy = this->_internal_locationy();
  ::uint64_t raw_locationy;
  memcpy(&raw_locationy, &tmp_locationy, sizeof(tmp_locationy));
  if (raw_locationy != 0) {
    total_size += 9;
  }

  // double rotate = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_rotate = this->_internal_rotate();
  ::uint64_t raw_rotate;
  memcpy(&raw_rotate, &tmp_rotate, sizeof(tmp_rotate));
  if (raw_rotate != 0) {
    total_size += 9;
  }

  // int32 tank_style = 4;
  if (this->_internal_tank_style() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tank_style());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_tankinfo_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_tankinfo_Request*>(
      &from));
}

void Game_tankinfo_Request::MergeFrom(const Game_tankinfo_Request& from) {
  Game_tankinfo_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_tankinfo_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationx = from._internal_locationx();
  ::uint64_t raw_locationx;
  memcpy(&raw_locationx, &tmp_locationx, sizeof(tmp_locationx));
  if (raw_locationx != 0) {
    _this->_internal_set_locationx(from._internal_locationx());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationy = from._internal_locationy();
  ::uint64_t raw_locationy;
  memcpy(&raw_locationy, &tmp_locationy, sizeof(tmp_locationy));
  if (raw_locationy != 0) {
    _this->_internal_set_locationy(from._internal_locationy());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_rotate = from._internal_rotate();
  ::uint64_t raw_rotate;
  memcpy(&raw_rotate, &tmp_rotate, sizeof(tmp_rotate));
  if (raw_rotate != 0) {
    _this->_internal_set_rotate(from._internal_rotate());
  }
  if (from._internal_tank_style() != 0) {
    _this->_internal_set_tank_style(from._internal_tank_style());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_tankinfo_Request::CopyFrom(const Game_tankinfo_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_tankinfo_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_tankinfo_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_tankinfo_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_tankinfo_Request::InternalSwap(Game_tankinfo_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.tank_style_)
      + sizeof(Game_tankinfo_Request::_impl_.tank_style_)
      - PROTOBUF_FIELD_OFFSET(Game_tankinfo_Request, _impl_.locationx_)>(
          reinterpret_cast<char*>(&_impl_.locationx_),
          reinterpret_cast<char*>(&other->_impl_.locationx_));
}

// ===================================================================

class Game_tankinfo_Response_tankinfo::_Internal {
 public:
  using HasBits = decltype(std::declval<Game_tankinfo_Response_tankinfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_._has_bits_);
  static const ::Message::Game_tankinfo_Request& tankinfo(const Game_tankinfo_Response_tankinfo* msg);
  static void set_has_tankinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Message::Game_tankinfo_Request& Game_tankinfo_Response_tankinfo::_Internal::tankinfo(const Game_tankinfo_Response_tankinfo* msg) {
  return *msg->_impl_.tankinfo_;
}
Game_tankinfo_Response_tankinfo::Game_tankinfo_Response_tankinfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_tankinfo_Response.tankinfo)
}
inline PROTOBUF_NDEBUG_INLINE Game_tankinfo_Response_tankinfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Game_tankinfo_Response_tankinfo::Game_tankinfo_Response_tankinfo(
    ::google::protobuf::Arena* arena,
    const Game_tankinfo_Response_tankinfo& from)
    : ::google::protobuf::MessageLite(arena) {
  Game_tankinfo_Response_tankinfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tankinfo_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::Message::Game_tankinfo_Request>(arena, *from._impl_.tankinfo_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, health_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::health_));

  // @@protoc_insertion_point(copy_constructor:Message.Game_tankinfo_Response.tankinfo)
}
inline PROTOBUF_NDEBUG_INLINE Game_tankinfo_Response_tankinfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_tankinfo_Response_tankinfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tankinfo_),
           0,
           offsetof(Impl_, health_) -
               offsetof(Impl_, tankinfo_) +
               sizeof(Impl_::health_));
}
Game_tankinfo_Response_tankinfo::~Game_tankinfo_Response_tankinfo() {
  // @@protoc_insertion_point(destructor:Message.Game_tankinfo_Response.tankinfo)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_tankinfo_Response_tankinfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.tankinfo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_tankinfo_Response_tankinfo::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[40];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_tankinfo_Response.tankinfo",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_tankinfo_Response_tankinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_tankinfo_Response.tankinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tankinfo_ != nullptr);
    _impl_.tankinfo_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.health_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.health_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Game_tankinfo_Response_tankinfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Game_tankinfo_Response_tankinfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Game_tankinfo_Response_tankinfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.id_)}},
    // .Message.Game_tankinfo_Request tankinfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.tankinfo_)}},
    // int32 health = 3;
    {::_pbi::TcParser::FastV32S1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.health_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .Message.Game_tankinfo_Request tankinfo = 2;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.tankinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 health = 3;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.health_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::Game_tankinfo_Request>()},
  }}, {{
  }},
};

::uint8_t* Game_tankinfo_Response_tankinfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_tankinfo_Response.tankinfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Message.Game_tankinfo_Request tankinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::tankinfo(this),
        _Internal::tankinfo(this).GetCachedSize(), target, stream);
  }

  // int32 health = 3;
  if (this->_internal_health() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_health(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_tankinfo_Response.tankinfo)
  return target;
}

::size_t Game_tankinfo_Response_tankinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_tankinfo_Response.tankinfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Message.Game_tankinfo_Request tankinfo = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tankinfo_);
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 health = 3;
  if (this->_internal_health() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_health());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_tankinfo_Response_tankinfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_tankinfo_Response_tankinfo*>(
      &from));
}

void Game_tankinfo_Response_tankinfo::MergeFrom(const Game_tankinfo_Response_tankinfo& from) {
  Game_tankinfo_Response_tankinfo* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_tankinfo_Response.tankinfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_tankinfo()->::Message::Game_tankinfo_Request::MergeFrom(
        from._internal_tankinfo());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_health() != 0) {
    _this->_internal_set_health(from._internal_health());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_tankinfo_Response_tankinfo::CopyFrom(const Game_tankinfo_Response_tankinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_tankinfo_Response.tankinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_tankinfo_Response_tankinfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_tankinfo_Response_tankinfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_tankinfo_Response_tankinfo::InternalSwap(Game_tankinfo_Response_tankinfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.health_)
      + sizeof(Game_tankinfo_Response_tankinfo::_impl_.health_)
      - PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response_tankinfo, _impl_.tankinfo_)>(
          reinterpret_cast<char*>(&_impl_.tankinfo_),
          reinterpret_cast<char*>(&other->_impl_.tankinfo_));
}

// ===================================================================

class Game_tankinfo_Response::_Internal {
 public:
};

Game_tankinfo_Response::Game_tankinfo_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_tankinfo_Response)
}
inline PROTOBUF_NDEBUG_INLINE Game_tankinfo_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : info_{visibility, arena, from.info_},
        _cached_size_{0} {}

Game_tankinfo_Response::Game_tankinfo_Response(
    ::google::protobuf::Arena* arena,
    const Game_tankinfo_Response& from)
    : ::google::protobuf::MessageLite(arena) {
  Game_tankinfo_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Game_tankinfo_Response)
}
inline PROTOBUF_NDEBUG_INLINE Game_tankinfo_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : info_{visibility, arena},
        _cached_size_{0} {}

inline void Game_tankinfo_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Game_tankinfo_Response::~Game_tankinfo_Response() {
  // @@protoc_insertion_point(destructor:Message.Game_tankinfo_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_tankinfo_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_tankinfo_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[31];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_tankinfo_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_tankinfo_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_tankinfo_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.info_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Game_tankinfo_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Game_tankinfo_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Game_tankinfo_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .Message.Game_tankinfo_Response.tankinfo info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Message.Game_tankinfo_Response.tankinfo info = 1;
    {PROTOBUF_FIELD_OFFSET(Game_tankinfo_Response, _impl_.info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::Game_tankinfo_Response_tankinfo>()},
  }}, {{
  }},
};

::uint8_t* Game_tankinfo_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_tankinfo_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Message.Game_tankinfo_Response.tankinfo info = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_tankinfo_Response)
  return target;
}

::size_t Game_tankinfo_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_tankinfo_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Message.Game_tankinfo_Response.tankinfo info = 1;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->_internal_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_tankinfo_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_tankinfo_Response*>(
      &from));
}

void Game_tankinfo_Response::MergeFrom(const Game_tankinfo_Response& from) {
  Game_tankinfo_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_tankinfo_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_info()->MergeFrom(
      from._internal_info());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_tankinfo_Response::CopyFrom(const Game_tankinfo_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_tankinfo_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_tankinfo_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_tankinfo_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_tankinfo_Response::InternalSwap(Game_tankinfo_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.info_.InternalSwap(&other->_impl_.info_);
}

// ===================================================================

class bulletinfo::_Internal {
 public:
};

bulletinfo::bulletinfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.bulletinfo)
}
bulletinfo::bulletinfo(
    ::google::protobuf::Arena* arena, const bulletinfo& from)
    : bulletinfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE bulletinfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void bulletinfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, locationx_),
           0,
           offsetof(Impl_, bullet_style_) -
               offsetof(Impl_, locationx_) +
               sizeof(Impl_::bullet_style_));
}
bulletinfo::~bulletinfo() {
  // @@protoc_insertion_point(destructor:Message.bulletinfo)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void bulletinfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
bulletinfo::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[19];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.bulletinfo",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void bulletinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.bulletinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.locationx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bullet_style_) -
      reinterpret_cast<char*>(&_impl_.locationx_)) + sizeof(_impl_.bullet_style_));
  _internal_metadata_.Clear<std::string>();
}

const char* bulletinfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> bulletinfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_bulletinfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 bullet_style = 4;
    {::_pbi::TcParser::FastV32S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.bullet_style_)}},
    // double locationX = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.locationx_)}},
    // double locationY = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.locationy_)}},
    // double rotate = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.rotate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double locationX = 1;
    {PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.locationx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double locationY = 2;
    {PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.locationy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double rotate = 3;
    {PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.rotate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 bullet_style = 4;
    {PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.bullet_style_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* bulletinfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.bulletinfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double locationX = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationx = this->_internal_locationx();
  ::uint64_t raw_locationx;
  memcpy(&raw_locationx, &tmp_locationx, sizeof(tmp_locationx));
  if (raw_locationx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_locationx(), target);
  }

  // double locationY = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationy = this->_internal_locationy();
  ::uint64_t raw_locationy;
  memcpy(&raw_locationy, &tmp_locationy, sizeof(tmp_locationy));
  if (raw_locationy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_locationy(), target);
  }

  // double rotate = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_rotate = this->_internal_rotate();
  ::uint64_t raw_rotate;
  memcpy(&raw_rotate, &tmp_rotate, sizeof(tmp_rotate));
  if (raw_rotate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_rotate(), target);
  }

  // int32 bullet_style = 4;
  if (this->_internal_bullet_style() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_bullet_style(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.bulletinfo)
  return target;
}

::size_t bulletinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.bulletinfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double locationX = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationx = this->_internal_locationx();
  ::uint64_t raw_locationx;
  memcpy(&raw_locationx, &tmp_locationx, sizeof(tmp_locationx));
  if (raw_locationx != 0) {
    total_size += 9;
  }

  // double locationY = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationy = this->_internal_locationy();
  ::uint64_t raw_locationy;
  memcpy(&raw_locationy, &tmp_locationy, sizeof(tmp_locationy));
  if (raw_locationy != 0) {
    total_size += 9;
  }

  // double rotate = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_rotate = this->_internal_rotate();
  ::uint64_t raw_rotate;
  memcpy(&raw_rotate, &tmp_rotate, sizeof(tmp_rotate));
  if (raw_rotate != 0) {
    total_size += 9;
  }

  // int32 bullet_style = 4;
  if (this->_internal_bullet_style() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bullet_style());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void bulletinfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const bulletinfo*>(
      &from));
}

void bulletinfo::MergeFrom(const bulletinfo& from) {
  bulletinfo* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.bulletinfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationx = from._internal_locationx();
  ::uint64_t raw_locationx;
  memcpy(&raw_locationx, &tmp_locationx, sizeof(tmp_locationx));
  if (raw_locationx != 0) {
    _this->_internal_set_locationx(from._internal_locationx());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_locationy = from._internal_locationy();
  ::uint64_t raw_locationy;
  memcpy(&raw_locationy, &tmp_locationy, sizeof(tmp_locationy));
  if (raw_locationy != 0) {
    _this->_internal_set_locationy(from._internal_locationy());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_rotate = from._internal_rotate();
  ::uint64_t raw_rotate;
  memcpy(&raw_rotate, &tmp_rotate, sizeof(tmp_rotate));
  if (raw_rotate != 0) {
    _this->_internal_set_rotate(from._internal_rotate());
  }
  if (from._internal_bullet_style() != 0) {
    _this->_internal_set_bullet_style(from._internal_bullet_style());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void bulletinfo::CopyFrom(const bulletinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.bulletinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool bulletinfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* bulletinfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void bulletinfo::InternalSwap(bulletinfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.bullet_style_)
      + sizeof(bulletinfo::_impl_.bullet_style_)
      - PROTOBUF_FIELD_OFFSET(bulletinfo, _impl_.locationx_)>(
          reinterpret_cast<char*>(&_impl_.locationx_),
          reinterpret_cast<char*>(&other->_impl_.locationx_));
}

// ===================================================================

class Game_bulletinfo_Request::_Internal {
 public:
};

Game_bulletinfo_Request::Game_bulletinfo_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_bulletinfo_Request)
}
inline PROTOBUF_NDEBUG_INLINE Game_bulletinfo_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bulletinfo_{visibility, arena, from.bulletinfo_},
        _cached_size_{0} {}

Game_bulletinfo_Request::Game_bulletinfo_Request(
    ::google::protobuf::Arena* arena,
    const Game_bulletinfo_Request& from)
    : ::google::protobuf::MessageLite(arena) {
  Game_bulletinfo_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Game_bulletinfo_Request)
}
inline PROTOBUF_NDEBUG_INLINE Game_bulletinfo_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bulletinfo_{visibility, arena},
        _cached_size_{0} {}

inline void Game_bulletinfo_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Game_bulletinfo_Request::~Game_bulletinfo_Request() {
  // @@protoc_insertion_point(destructor:Message.Game_bulletinfo_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_bulletinfo_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_bulletinfo_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[32];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_bulletinfo_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_bulletinfo_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_bulletinfo_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bulletinfo_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Game_bulletinfo_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Game_bulletinfo_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Game_bulletinfo_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .Message.bulletinfo bulletinfo = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Request, _impl_.bulletinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Message.bulletinfo bulletinfo = 2;
    {PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Request, _impl_.bulletinfo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::bulletinfo>()},
  }}, {{
  }},
};

::uint8_t* Game_bulletinfo_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_bulletinfo_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Message.bulletinfo bulletinfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bulletinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_bulletinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_bulletinfo_Request)
  return target;
}

::size_t Game_bulletinfo_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_bulletinfo_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Message.bulletinfo bulletinfo = 2;
  total_size += 1UL * this->_internal_bulletinfo_size();
  for (const auto& msg : this->_internal_bulletinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_bulletinfo_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_bulletinfo_Request*>(
      &from));
}

void Game_bulletinfo_Request::MergeFrom(const Game_bulletinfo_Request& from) {
  Game_bulletinfo_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_bulletinfo_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bulletinfo()->MergeFrom(
      from._internal_bulletinfo());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_bulletinfo_Request::CopyFrom(const Game_bulletinfo_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_bulletinfo_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_bulletinfo_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_bulletinfo_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_bulletinfo_Request::InternalSwap(Game_bulletinfo_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bulletinfo_.InternalSwap(&other->_impl_.bulletinfo_);
}

// ===================================================================

class Game_bulletinfo_Response_Info::_Internal {
 public:
};

Game_bulletinfo_Response_Info::Game_bulletinfo_Response_Info(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_bulletinfo_Response.Info)
}
inline PROTOBUF_NDEBUG_INLINE Game_bulletinfo_Response_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bulletinfo_{visibility, arena, from.bulletinfo_},
        _cached_size_{0} {}

Game_bulletinfo_Response_Info::Game_bulletinfo_Response_Info(
    ::google::protobuf::Arena* arena,
    const Game_bulletinfo_Response_Info& from)
    : ::google::protobuf::MessageLite(arena) {
  Game_bulletinfo_Response_Info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.tankid_ = from._impl_.tankid_;

  // @@protoc_insertion_point(copy_constructor:Message.Game_bulletinfo_Response.Info)
}
inline PROTOBUF_NDEBUG_INLINE Game_bulletinfo_Response_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bulletinfo_{visibility, arena},
        _cached_size_{0} {}

inline void Game_bulletinfo_Response_Info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tankid_ = {};
}
Game_bulletinfo_Response_Info::~Game_bulletinfo_Response_Info() {
  // @@protoc_insertion_point(destructor:Message.Game_bulletinfo_Response.Info)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_bulletinfo_Response_Info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_bulletinfo_Response_Info::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[38];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_bulletinfo_Response.Info",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_bulletinfo_Response_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_bulletinfo_Response.Info)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bulletinfo_.Clear();
  _impl_.tankid_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Game_bulletinfo_Response_Info::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Game_bulletinfo_Response_Info::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Game_bulletinfo_Response_Info_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .Message.bulletinfo bulletinfo = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Response_Info, _impl_.bulletinfo_)}},
    // int32 tankid = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Response_Info, _impl_.tankid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tankid = 1;
    {PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Response_Info, _impl_.tankid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .Message.bulletinfo bulletinfo = 2;
    {PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Response_Info, _impl_.bulletinfo_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::bulletinfo>()},
  }}, {{
  }},
};

::uint8_t* Game_bulletinfo_Response_Info::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_bulletinfo_Response.Info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tankid = 1;
  if (this->_internal_tankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tankid(), target);
  }

  // repeated .Message.bulletinfo bulletinfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bulletinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_bulletinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_bulletinfo_Response.Info)
  return target;
}

::size_t Game_bulletinfo_Response_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_bulletinfo_Response.Info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Message.bulletinfo bulletinfo = 2;
  total_size += 1UL * this->_internal_bulletinfo_size();
  for (const auto& msg : this->_internal_bulletinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 tankid = 1;
  if (this->_internal_tankid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tankid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_bulletinfo_Response_Info::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_bulletinfo_Response_Info*>(
      &from));
}

void Game_bulletinfo_Response_Info::MergeFrom(const Game_bulletinfo_Response_Info& from) {
  Game_bulletinfo_Response_Info* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_bulletinfo_Response.Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bulletinfo()->MergeFrom(
      from._internal_bulletinfo());
  if (from._internal_tankid() != 0) {
    _this->_internal_set_tankid(from._internal_tankid());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_bulletinfo_Response_Info::CopyFrom(const Game_bulletinfo_Response_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_bulletinfo_Response.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_bulletinfo_Response_Info::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_bulletinfo_Response_Info::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_bulletinfo_Response_Info::InternalSwap(Game_bulletinfo_Response_Info* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bulletinfo_.InternalSwap(&other->_impl_.bulletinfo_);
        swap(_impl_.tankid_, other->_impl_.tankid_);
}

// ===================================================================

class Game_bulletinfo_Response::_Internal {
 public:
};

Game_bulletinfo_Response::Game_bulletinfo_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_bulletinfo_Response)
}
inline PROTOBUF_NDEBUG_INLINE Game_bulletinfo_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : info_{visibility, arena, from.info_},
        _cached_size_{0} {}

Game_bulletinfo_Response::Game_bulletinfo_Response(
    ::google::protobuf::Arena* arena,
    const Game_bulletinfo_Response& from)
    : ::google::protobuf::MessageLite(arena) {
  Game_bulletinfo_Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Message.Game_bulletinfo_Response)
}
inline PROTOBUF_NDEBUG_INLINE Game_bulletinfo_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : info_{visibility, arena},
        _cached_size_{0} {}

inline void Game_bulletinfo_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Game_bulletinfo_Response::~Game_bulletinfo_Response() {
  // @@protoc_insertion_point(destructor:Message.Game_bulletinfo_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_bulletinfo_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_bulletinfo_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[33];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_bulletinfo_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_bulletinfo_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_bulletinfo_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.info_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Game_bulletinfo_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Game_bulletinfo_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Game_bulletinfo_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .Message.Game_bulletinfo_Response.Info info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Response, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Message.Game_bulletinfo_Response.Info info = 1;
    {PROTOBUF_FIELD_OFFSET(Game_bulletinfo_Response, _impl_.info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::Game_bulletinfo_Response_Info>()},
  }}, {{
  }},
};

::uint8_t* Game_bulletinfo_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_bulletinfo_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Message.Game_bulletinfo_Response.Info info = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_bulletinfo_Response)
  return target;
}

::size_t Game_bulletinfo_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_bulletinfo_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Message.Game_bulletinfo_Response.Info info = 1;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->_internal_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_bulletinfo_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_bulletinfo_Response*>(
      &from));
}

void Game_bulletinfo_Response::MergeFrom(const Game_bulletinfo_Response& from) {
  Game_bulletinfo_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_bulletinfo_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_info()->MergeFrom(
      from._internal_info());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_bulletinfo_Response::CopyFrom(const Game_bulletinfo_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_bulletinfo_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_bulletinfo_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_bulletinfo_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_bulletinfo_Response::InternalSwap(Game_bulletinfo_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.info_.InternalSwap(&other->_impl_.info_);
}

// ===================================================================

class Game_hit_brick_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<Game_hit_brick_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_._has_bits_);
  static const ::Message::bulletinfo& bulletinfo(const Game_hit_brick_Request* msg);
  static void set_has_bulletinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Message::bulletinfo& Game_hit_brick_Request::_Internal::bulletinfo(const Game_hit_brick_Request* msg) {
  return *msg->_impl_.bulletinfo_;
}
Game_hit_brick_Request::Game_hit_brick_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_hit_brick_Request)
}
inline PROTOBUF_NDEBUG_INLINE Game_hit_brick_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Game_hit_brick_Request::Game_hit_brick_Request(
    ::google::protobuf::Arena* arena,
    const Game_hit_brick_Request& from)
    : ::google::protobuf::MessageLite(arena) {
  Game_hit_brick_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bulletinfo_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::Message::bulletinfo>(arena, *from._impl_.bulletinfo_)
                : nullptr;
  _impl_.hited_brick_id_ = from._impl_.hited_brick_id_;

  // @@protoc_insertion_point(copy_constructor:Message.Game_hit_brick_Request)
}
inline PROTOBUF_NDEBUG_INLINE Game_hit_brick_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_hit_brick_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bulletinfo_),
           0,
           offsetof(Impl_, hited_brick_id_) -
               offsetof(Impl_, bulletinfo_) +
               sizeof(Impl_::hited_brick_id_));
}
Game_hit_brick_Request::~Game_hit_brick_Request() {
  // @@protoc_insertion_point(destructor:Message.Game_hit_brick_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_hit_brick_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.bulletinfo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_hit_brick_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[31];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_hit_brick_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_hit_brick_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_hit_brick_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bulletinfo_ != nullptr);
    _impl_.bulletinfo_->Clear();
  }
  _impl_.hited_brick_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Game_hit_brick_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Game_hit_brick_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Game_hit_brick_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // .Message.bulletinfo bulletinfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_.bulletinfo_)}},
    // int32 hited_brick_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_.hited_brick_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 hited_brick_id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_.hited_brick_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .Message.bulletinfo bulletinfo = 2;
    {PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_.bulletinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::bulletinfo>()},
  }}, {{
  }},
};

::uint8_t* Game_hit_brick_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_hit_brick_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 hited_brick_id = 1;
  if (this->_internal_hited_brick_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_hited_brick_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Message.bulletinfo bulletinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::bulletinfo(this),
        _Internal::bulletinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_hit_brick_Request)
  return target;
}

::size_t Game_hit_brick_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_hit_brick_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Message.bulletinfo bulletinfo = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bulletinfo_);
  }

  // int32 hited_brick_id = 1;
  if (this->_internal_hited_brick_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hited_brick_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_hit_brick_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_hit_brick_Request*>(
      &from));
}

void Game_hit_brick_Request::MergeFrom(const Game_hit_brick_Request& from) {
  Game_hit_brick_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_hit_brick_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bulletinfo()->::Message::bulletinfo::MergeFrom(
        from._internal_bulletinfo());
  }
  if (from._internal_hited_brick_id() != 0) {
    _this->_internal_set_hited_brick_id(from._internal_hited_brick_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_hit_brick_Request::CopyFrom(const Game_hit_brick_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_hit_brick_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_hit_brick_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_hit_brick_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_hit_brick_Request::InternalSwap(Game_hit_brick_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_.hited_brick_id_)
      + sizeof(Game_hit_brick_Request::_impl_.hited_brick_id_)
      - PROTOBUF_FIELD_OFFSET(Game_hit_brick_Request, _impl_.bulletinfo_)>(
          reinterpret_cast<char*>(&_impl_.bulletinfo_),
          reinterpret_cast<char*>(&other->_impl_.bulletinfo_));
}

// ===================================================================

class Game_brick_hited_Response::_Internal {
 public:
};

Game_brick_hited_Response::Game_brick_hited_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_brick_hited_Response)
}
Game_brick_hited_Response::Game_brick_hited_Response(
    ::google::protobuf::Arena* arena, const Game_brick_hited_Response& from)
    : Game_brick_hited_Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Game_brick_hited_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_brick_hited_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hited_brick_id_),
           0,
           offsetof(Impl_, health_) -
               offsetof(Impl_, hited_brick_id_) +
               sizeof(Impl_::health_));
}
Game_brick_hited_Response::~Game_brick_hited_Response() {
  // @@protoc_insertion_point(destructor:Message.Game_brick_hited_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_brick_hited_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_brick_hited_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[34];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_brick_hited_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_brick_hited_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_brick_hited_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.hited_brick_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.health_) -
      reinterpret_cast<char*>(&_impl_.hited_brick_id_)) + sizeof(_impl_.health_));
  _internal_metadata_.Clear<std::string>();
}

const char* Game_brick_hited_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Game_brick_hited_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Game_brick_hited_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 health = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Game_brick_hited_Response, _impl_.health_)}},
    // int32 hited_brick_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_brick_hited_Response, _impl_.hited_brick_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 hited_brick_id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_brick_hited_Response, _impl_.hited_brick_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 health = 2;
    {PROTOBUF_FIELD_OFFSET(Game_brick_hited_Response, _impl_.health_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Game_brick_hited_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_brick_hited_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 hited_brick_id = 1;
  if (this->_internal_hited_brick_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_hited_brick_id(), target);
  }

  // int32 health = 2;
  if (this->_internal_health() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_health(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_brick_hited_Response)
  return target;
}

::size_t Game_brick_hited_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_brick_hited_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 hited_brick_id = 1;
  if (this->_internal_hited_brick_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hited_brick_id());
  }

  // int32 health = 2;
  if (this->_internal_health() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_health());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_brick_hited_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_brick_hited_Response*>(
      &from));
}

void Game_brick_hited_Response::MergeFrom(const Game_brick_hited_Response& from) {
  Game_brick_hited_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_brick_hited_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hited_brick_id() != 0) {
    _this->_internal_set_hited_brick_id(from._internal_hited_brick_id());
  }
  if (from._internal_health() != 0) {
    _this->_internal_set_health(from._internal_health());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_brick_hited_Response::CopyFrom(const Game_brick_hited_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_brick_hited_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_brick_hited_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_brick_hited_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_brick_hited_Response::InternalSwap(Game_brick_hited_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Game_brick_hited_Response, _impl_.health_)
      + sizeof(Game_brick_hited_Response::_impl_.health_)
      - PROTOBUF_FIELD_OFFSET(Game_brick_hited_Response, _impl_.hited_brick_id_)>(
          reinterpret_cast<char*>(&_impl_.hited_brick_id_),
          reinterpret_cast<char*>(&other->_impl_.hited_brick_id_));
}

// ===================================================================

class Game_hit_tank_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<Game_hit_tank_Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_._has_bits_);
  static const ::Message::bulletinfo& bulletinfo(const Game_hit_tank_Request* msg);
  static void set_has_bulletinfo(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Message::bulletinfo& Game_hit_tank_Request::_Internal::bulletinfo(const Game_hit_tank_Request* msg) {
  return *msg->_impl_.bulletinfo_;
}
Game_hit_tank_Request::Game_hit_tank_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_hit_tank_Request)
}
inline PROTOBUF_NDEBUG_INLINE Game_hit_tank_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Game_hit_tank_Request::Game_hit_tank_Request(
    ::google::protobuf::Arena* arena,
    const Game_hit_tank_Request& from)
    : ::google::protobuf::MessageLite(arena) {
  Game_hit_tank_Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bulletinfo_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::Message::bulletinfo>(arena, *from._impl_.bulletinfo_)
                : nullptr;
  _impl_.hited_tank_id_ = from._impl_.hited_tank_id_;

  // @@protoc_insertion_point(copy_constructor:Message.Game_hit_tank_Request)
}
inline PROTOBUF_NDEBUG_INLINE Game_hit_tank_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_hit_tank_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bulletinfo_),
           0,
           offsetof(Impl_, hited_tank_id_) -
               offsetof(Impl_, bulletinfo_) +
               sizeof(Impl_::hited_tank_id_));
}
Game_hit_tank_Request::~Game_hit_tank_Request() {
  // @@protoc_insertion_point(destructor:Message.Game_hit_tank_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_hit_tank_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.bulletinfo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_hit_tank_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[30];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_hit_tank_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_hit_tank_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_hit_tank_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bulletinfo_ != nullptr);
    _impl_.bulletinfo_->Clear();
  }
  _impl_.hited_tank_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Game_hit_tank_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Game_hit_tank_Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Game_hit_tank_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // .Message.bulletinfo bulletinfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_.bulletinfo_)}},
    // int32 hited_tank_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_.hited_tank_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 hited_tank_id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_.hited_tank_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .Message.bulletinfo bulletinfo = 2;
    {PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_.bulletinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Message::bulletinfo>()},
  }}, {{
  }},
};

::uint8_t* Game_hit_tank_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_hit_tank_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 hited_tank_id = 1;
  if (this->_internal_hited_tank_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_hited_tank_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Message.bulletinfo bulletinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::bulletinfo(this),
        _Internal::bulletinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_hit_tank_Request)
  return target;
}

::size_t Game_hit_tank_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_hit_tank_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Message.bulletinfo bulletinfo = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bulletinfo_);
  }

  // int32 hited_tank_id = 1;
  if (this->_internal_hited_tank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hited_tank_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_hit_tank_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_hit_tank_Request*>(
      &from));
}

void Game_hit_tank_Request::MergeFrom(const Game_hit_tank_Request& from) {
  Game_hit_tank_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_hit_tank_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bulletinfo()->::Message::bulletinfo::MergeFrom(
        from._internal_bulletinfo());
  }
  if (from._internal_hited_tank_id() != 0) {
    _this->_internal_set_hited_tank_id(from._internal_hited_tank_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_hit_tank_Request::CopyFrom(const Game_hit_tank_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_hit_tank_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_hit_tank_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_hit_tank_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_hit_tank_Request::InternalSwap(Game_hit_tank_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_.hited_tank_id_)
      + sizeof(Game_hit_tank_Request::_impl_.hited_tank_id_)
      - PROTOBUF_FIELD_OFFSET(Game_hit_tank_Request, _impl_.bulletinfo_)>(
          reinterpret_cast<char*>(&_impl_.bulletinfo_),
          reinterpret_cast<char*>(&other->_impl_.bulletinfo_));
}

// ===================================================================

class Game_tank_hited_Response::_Internal {
 public:
};

Game_tank_hited_Response::Game_tank_hited_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_tank_hited_Response)
}
Game_tank_hited_Response::Game_tank_hited_Response(
    ::google::protobuf::Arena* arena, const Game_tank_hited_Response& from)
    : Game_tank_hited_Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Game_tank_hited_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_tank_hited_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hited_tank_id_),
           0,
           offsetof(Impl_, health_) -
               offsetof(Impl_, hited_tank_id_) +
               sizeof(Impl_::health_));
}
Game_tank_hited_Response::~Game_tank_hited_Response() {
  // @@protoc_insertion_point(destructor:Message.Game_tank_hited_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_tank_hited_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_tank_hited_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[33];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_tank_hited_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_tank_hited_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_tank_hited_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.hited_tank_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.health_) -
      reinterpret_cast<char*>(&_impl_.hited_tank_id_)) + sizeof(_impl_.health_));
  _internal_metadata_.Clear<std::string>();
}

const char* Game_tank_hited_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Game_tank_hited_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Game_tank_hited_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 health = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tank_hited_Response, _impl_.health_)}},
    // int32 hited_tank_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_tank_hited_Response, _impl_.hited_tank_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 hited_tank_id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_tank_hited_Response, _impl_.hited_tank_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 health = 2;
    {PROTOBUF_FIELD_OFFSET(Game_tank_hited_Response, _impl_.health_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Game_tank_hited_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_tank_hited_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 hited_tank_id = 1;
  if (this->_internal_hited_tank_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_hited_tank_id(), target);
  }

  // int32 health = 2;
  if (this->_internal_health() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_health(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_tank_hited_Response)
  return target;
}

::size_t Game_tank_hited_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_tank_hited_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 hited_tank_id = 1;
  if (this->_internal_hited_tank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_hited_tank_id());
  }

  // int32 health = 2;
  if (this->_internal_health() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_health());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_tank_hited_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_tank_hited_Response*>(
      &from));
}

void Game_tank_hited_Response::MergeFrom(const Game_tank_hited_Response& from) {
  Game_tank_hited_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_tank_hited_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hited_tank_id() != 0) {
    _this->_internal_set_hited_tank_id(from._internal_hited_tank_id());
  }
  if (from._internal_health() != 0) {
    _this->_internal_set_health(from._internal_health());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_tank_hited_Response::CopyFrom(const Game_tank_hited_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_tank_hited_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_tank_hited_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_tank_hited_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_tank_hited_Response::InternalSwap(Game_tank_hited_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Game_tank_hited_Response, _impl_.health_)
      + sizeof(Game_tank_hited_Response::_impl_.health_)
      - PROTOBUF_FIELD_OFFSET(Game_tank_hited_Response, _impl_.hited_tank_id_)>(
          reinterpret_cast<char*>(&_impl_.hited_tank_id_),
          reinterpret_cast<char*>(&other->_impl_.hited_tank_id_));
}

// ===================================================================

class Game_destroyed_tank_Response::_Internal {
 public:
};

Game_destroyed_tank_Response::Game_destroyed_tank_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_destroyed_tank_Response)
}
Game_destroyed_tank_Response::Game_destroyed_tank_Response(
    ::google::protobuf::Arena* arena, const Game_destroyed_tank_Response& from)
    : Game_destroyed_tank_Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Game_destroyed_tank_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_destroyed_tank_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.destroyed_tank_id_ = {};
}
Game_destroyed_tank_Response::~Game_destroyed_tank_Response() {
  // @@protoc_insertion_point(destructor:Message.Game_destroyed_tank_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_destroyed_tank_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_destroyed_tank_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[37];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_destroyed_tank_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_destroyed_tank_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_destroyed_tank_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.destroyed_tank_id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Game_destroyed_tank_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Game_destroyed_tank_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Game_destroyed_tank_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 destroyed_tank_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_destroyed_tank_Response, _impl_.destroyed_tank_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 destroyed_tank_id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_destroyed_tank_Response, _impl_.destroyed_tank_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Game_destroyed_tank_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_destroyed_tank_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 destroyed_tank_id = 1;
  if (this->_internal_destroyed_tank_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_destroyed_tank_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_destroyed_tank_Response)
  return target;
}

::size_t Game_destroyed_tank_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_destroyed_tank_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 destroyed_tank_id = 1;
  if (this->_internal_destroyed_tank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_destroyed_tank_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_destroyed_tank_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_destroyed_tank_Response*>(
      &from));
}

void Game_destroyed_tank_Response::MergeFrom(const Game_destroyed_tank_Response& from) {
  Game_destroyed_tank_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_destroyed_tank_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_destroyed_tank_id() != 0) {
    _this->_internal_set_destroyed_tank_id(from._internal_destroyed_tank_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_destroyed_tank_Response::CopyFrom(const Game_destroyed_tank_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_destroyed_tank_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_destroyed_tank_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_destroyed_tank_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_destroyed_tank_Response::InternalSwap(Game_destroyed_tank_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.destroyed_tank_id_, other->_impl_.destroyed_tank_id_);
}

// ===================================================================

class Game_getProp_Request::_Internal {
 public:
};

Game_getProp_Request::Game_getProp_Request(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_getProp_Request)
}
Game_getProp_Request::Game_getProp_Request(
    ::google::protobuf::Arena* arena, const Game_getProp_Request& from)
    : Game_getProp_Request(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Game_getProp_Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_getProp_Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.prop_id_ = {};
}
Game_getProp_Request::~Game_getProp_Request() {
  // @@protoc_insertion_point(destructor:Message.Game_getProp_Request)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_getProp_Request::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_getProp_Request::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[29];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_getProp_Request",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_getProp_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_getProp_Request)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.prop_id_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* Game_getProp_Request::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Game_getProp_Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Game_getProp_Request_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 prop_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_getProp_Request, _impl_.prop_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 prop_id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_getProp_Request, _impl_.prop_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Game_getProp_Request::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_getProp_Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 prop_id = 1;
  if (this->_internal_prop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_prop_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_getProp_Request)
  return target;
}

::size_t Game_getProp_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_getProp_Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 prop_id = 1;
  if (this->_internal_prop_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prop_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_getProp_Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_getProp_Request*>(
      &from));
}

void Game_getProp_Request::MergeFrom(const Game_getProp_Request& from) {
  Game_getProp_Request* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_getProp_Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_prop_id() != 0) {
    _this->_internal_set_prop_id(from._internal_prop_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_getProp_Request::CopyFrom(const Game_getProp_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_getProp_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_getProp_Request::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_getProp_Request::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_getProp_Request::InternalSwap(Game_getProp_Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.prop_id_, other->_impl_.prop_id_);
}

// ===================================================================

class Game_prop_Response::_Internal {
 public:
};

Game_prop_Response::Game_prop_Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.Game_prop_Response)
}
Game_prop_Response::Game_prop_Response(
    ::google::protobuf::Arena* arena, const Game_prop_Response& from)
    : Game_prop_Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Game_prop_Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Game_prop_Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, prop_id_),
           0,
           offsetof(Impl_, tank_id_) -
               offsetof(Impl_, prop_id_) +
               sizeof(Impl_::tank_id_));
}
Game_prop_Response::~Game_prop_Response() {
  // @@protoc_insertion_point(destructor:Message.Game_prop_Response)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Game_prop_Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Game_prop_Response::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[27];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.Game_prop_Response",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void Game_prop_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.Game_prop_Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.prop_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tank_id_) -
      reinterpret_cast<char*>(&_impl_.prop_id_)) + sizeof(_impl_.tank_id_));
  _internal_metadata_.Clear<std::string>();
}

const char* Game_prop_Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Game_prop_Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Game_prop_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 tank_id = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Game_prop_Response, _impl_.tank_id_)}},
    // int32 prop_id = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Game_prop_Response, _impl_.prop_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 prop_id = 1;
    {PROTOBUF_FIELD_OFFSET(Game_prop_Response, _impl_.prop_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 tank_id = 2;
    {PROTOBUF_FIELD_OFFSET(Game_prop_Response, _impl_.tank_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Game_prop_Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.Game_prop_Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 prop_id = 1;
  if (this->_internal_prop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_prop_id(), target);
  }

  // int32 tank_id = 2;
  if (this->_internal_tank_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_tank_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.Game_prop_Response)
  return target;
}

::size_t Game_prop_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.Game_prop_Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 prop_id = 1;
  if (this->_internal_prop_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prop_id());
  }

  // int32 tank_id = 2;
  if (this->_internal_tank_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tank_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void Game_prop_Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Game_prop_Response*>(
      &from));
}

void Game_prop_Response::MergeFrom(const Game_prop_Response& from) {
  Game_prop_Response* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.Game_prop_Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_prop_id() != 0) {
    _this->_internal_set_prop_id(from._internal_prop_id());
  }
  if (from._internal_tank_id() != 0) {
    _this->_internal_set_tank_id(from._internal_tank_id());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Game_prop_Response::CopyFrom(const Game_prop_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.Game_prop_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Game_prop_Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Game_prop_Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Game_prop_Response::InternalSwap(Game_prop_Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Game_prop_Response, _impl_.tank_id_)
      + sizeof(Game_prop_Response::_impl_.tank_id_)
      - PROTOBUF_FIELD_OFFSET(Game_prop_Response, _impl_.prop_id_)>(
          reinterpret_cast<char*>(&_impl_.prop_id_),
          reinterpret_cast<char*>(&other->_impl_.prop_id_));
}

// ===================================================================

class UDP_INFO_REQ::_Internal {
 public:
};

UDP_INFO_REQ::UDP_INFO_REQ(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.UDP_INFO_REQ)
}
inline PROTOBUF_NDEBUG_INLINE UDP_INFO_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        _cached_size_{0} {}

UDP_INFO_REQ::UDP_INFO_REQ(
    ::google::protobuf::Arena* arena,
    const UDP_INFO_REQ& from)
    : ::google::protobuf::MessageLite(arena) {
  UDP_INFO_REQ* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:Message.UDP_INFO_REQ)
}
inline PROTOBUF_NDEBUG_INLINE UDP_INFO_REQ::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        _cached_size_{0} {}

inline void UDP_INFO_REQ::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
UDP_INFO_REQ::~UDP_INFO_REQ() {
  // @@protoc_insertion_point(destructor:Message.UDP_INFO_REQ)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void UDP_INFO_REQ::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UDP_INFO_REQ::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[21];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.UDP_INFO_REQ",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void UDP_INFO_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.UDP_INFO_REQ)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  _impl_.port_ = 0;
  _internal_metadata_.Clear<std::string>();
}

const char* UDP_INFO_REQ::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 31, 2> UDP_INFO_REQ::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UDP_INFO_REQ_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // int32 port = 2;
    {::_pbi::TcParser::FastV32S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UDP_INFO_REQ, _impl_.port_)}},
    // string ip = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UDP_INFO_REQ, _impl_.ip_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string ip = 1;
    {PROTOBUF_FIELD_OFFSET(UDP_INFO_REQ, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 2;
    {PROTOBUF_FIELD_OFFSET(UDP_INFO_REQ, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\24\2\0\0\0\0\0\0"
    "Message.UDP_INFO_REQ"
    "ip"
  }},
};

::uint8_t* UDP_INFO_REQ::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.UDP_INFO_REQ)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Message.UDP_INFO_REQ.ip");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 port = 2;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.UDP_INFO_REQ)
  return target;
}

::size_t UDP_INFO_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.UDP_INFO_REQ)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // int32 port = 2;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void UDP_INFO_REQ::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const UDP_INFO_REQ*>(
      &from));
}

void UDP_INFO_REQ::MergeFrom(const UDP_INFO_REQ& from) {
  UDP_INFO_REQ* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.UDP_INFO_REQ)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void UDP_INFO_REQ::CopyFrom(const UDP_INFO_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.UDP_INFO_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UDP_INFO_REQ::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UDP_INFO_REQ::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UDP_INFO_REQ::InternalSwap(UDP_INFO_REQ* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
        swap(_impl_.port_, other->_impl_.port_);
}

// ===================================================================

class UDP_INFO_RES::_Internal {
 public:
};

UDP_INFO_RES::UDP_INFO_RES(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message.UDP_INFO_RES)
}
UDP_INFO_RES::UDP_INFO_RES(
    ::google::protobuf::Arena* arena, const UDP_INFO_RES& from)
    : UDP_INFO_RES(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UDP_INFO_RES::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UDP_INFO_RES::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ok_ = {};
}
UDP_INFO_RES::~UDP_INFO_RES() {
  // @@protoc_insertion_point(destructor:Message.UDP_INFO_RES)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void UDP_INFO_RES::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UDP_INFO_RES::GetClassData() const {
  struct ClassData_ {
    ::google::protobuf::MessageLite::ClassData header;
    char type_name[21];
  };
  PROTOBUF_CONSTINIT static const ClassData_ data = {
      {
          nullptr,  // MergeImpl
           nullptr,  // OnDemandRegisterArenaDtor
           nullptr,  // DescriptorMethods
      },
      "Message.UDP_INFO_RES",
  };

  return &data.header;
}
PROTOBUF_NOINLINE void UDP_INFO_RES::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.UDP_INFO_RES)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<std::string>();
}

const char* UDP_INFO_RES::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> UDP_INFO_RES::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UDP_INFO_RES_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // bool OK = 1;
    {::_pbi::TcParser::FastV8S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UDP_INFO_RES, _impl_.ok_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool OK = 1;
    {PROTOBUF_FIELD_OFFSET(UDP_INFO_RES, _impl_.ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UDP_INFO_RES::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.UDP_INFO_RES)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool OK = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.UDP_INFO_RES)
  return target;
}

::size_t UDP_INFO_RES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.UDP_INFO_RES)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool OK = 1;
  if (this->_internal_ok() != 0) {
    total_size += 2;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
  return total_size;
}

void UDP_INFO_RES::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const UDP_INFO_RES*>(
      &from));
}

void UDP_INFO_RES::MergeFrom(const UDP_INFO_RES& from) {
  UDP_INFO_RES* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Message.UDP_INFO_RES)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void UDP_INFO_RES::CopyFrom(const UDP_INFO_RES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.UDP_INFO_RES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UDP_INFO_RES::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UDP_INFO_RES::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UDP_INFO_RES::InternalSwap(UDP_INFO_RES* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.ok_, other->_impl_.ok_);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
